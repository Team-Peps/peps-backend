spring:
  jpa:
    show-sql: false
    hibernate:
      ddl-auto: update
    properties:
      hibernate:
        cache:
          missing_cache_strategy: create
          use_second_level_cache: true
          use_query_cache: true
          region:
            factory_class: org.hibernate.cache.jcache.JCacheRegionFactory
        javax:
          cache:
            provider: org.ehcache.jsr107.EhcacheCachingProvider
  cache:
    ehcache:
      config: classpath:ehcache.xml
  servlet:
    multipart:
      max-file-size: 200MB
      max-request-size: 200MB

application:
  security:
    jwt:
      secret-key: ${SECRET_KEY}
      expiration: 86400000 #a day
      refresh-token:
        expiration: 604800000 #7 days

minio:
  endpoint: ${MINIO_ENDPOINT}
  access-key: ${MINIO_ACCESS_KEY}
  secret-key: ${MINIO_SECRET_KEY}

cron:
  expression: "0 0 0 * * *"

url:
  stream:
    overwatch: https://www.twitch.tv/fefegg
    marvel-rivals: https://www.twitch.tv/lunium

discord:
  client-id: ${DISCORD_CLIENT_ID}
  client-secret: ${DISCORD_CLIENT_SECRET}
  redirect-uri: ${DISCORD_REDIRECT_URI}
  bot:
    api-key: ${DISCORD_BOT_API_KEY}
frontend:
  redirect-uri: ${FRONTEND_REDIRECT_URI}
  redirect-cancel-uri: ${FRONTEND_REDIRECT_CANCEL_URI}

---
spring:
  config:
    activate:
      on-profile: local
  datasource:
    url: ${DB_URL}
    username: ${DB_USERNAME}
    password: ${DB_PASSWORD}
    jpa:
      show-sql: true
      hibernate:
        ddl-auto: update

---
spring:
  config:
    activate:
      on-profile: dev
  datasource:
    url: ${DB_URL}
    username: ${DB_USERNAME}
    password: ${DB_PASSWORD}
    jpa:
      show-sql: true
      hibernate:
        ddl-auto: update

---
spring:
  config:
    activate:
      on-profile: test
  datasource:
    url: jdbc:h2:mem:db;DB_CLOSE_DELAY=-1
    username: sa
    password: sa
  jpa:
    show-sql: true
    hibernate:
      ddl-auto: create
    database-platform: org.hibernate.dialect.H2Dialect